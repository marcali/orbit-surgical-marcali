--- git status ---
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   source/extensions/orbit.surgical.tasks/orbit/surgical/tasks/surgical/handover/mdp/__init__.py
	modified:   source/extensions/orbit.surgical.tasks/orbit/surgical/tasks/surgical/lift/config/needle/joint_pos_env_cfg.py
	modified:   source/extensions/orbit.surgical.tasks/orbit/surgical/tasks/surgical/lift/lift_env_cfg.py

no changes added to commit (use "git add" and/or "git commit -a") 


--- git diff ---
diff --git a/source/extensions/orbit.surgical.tasks/orbit/surgical/tasks/surgical/handover/mdp/__init__.py b/source/extensions/orbit.surgical.tasks/orbit/surgical/tasks/surgical/handover/mdp/__init__.py
index 7d81602..92ee5e5 100644
--- a/source/extensions/orbit.surgical.tasks/orbit/surgical/tasks/surgical/handover/mdp/__init__.py
+++ b/source/extensions/orbit.surgical.tasks/orbit/surgical/tasks/surgical/handover/mdp/__init__.py
@@ -6,3 +6,7 @@
 """This sub-module contains the functions that are specific to the handover environments."""
 
 from omni.isaac.lab.envs.mdp import *  # noqa: F401, F403
+
+from .observations import *  # noqa: F401, F403
+from .rewards import *  # noqa: F401, F403
+from .terminations import *  # noqa: F401, F403
diff --git a/source/extensions/orbit.surgical.tasks/orbit/surgical/tasks/surgical/lift/config/needle/joint_pos_env_cfg.py b/source/extensions/orbit.surgical.tasks/orbit/surgical/tasks/surgical/lift/config/needle/joint_pos_env_cfg.py
index e522cdc..6e9306f 100644
--- a/source/extensions/orbit.surgical.tasks/orbit/surgical/tasks/surgical/lift/config/needle/joint_pos_env_cfg.py
+++ b/source/extensions/orbit.surgical.tasks/orbit/surgical/tasks/surgical/lift/config/needle/joint_pos_env_cfg.py
@@ -42,7 +42,7 @@ class NeedleLiftEnvCfg(LiftEnvCfg):
                 "psm_tool_pitch_joint",
                 "psm_tool_yaw_joint",
             ],
-            scale=0.5,
+            scale=0.4,
                         # scale={
             #     "psm_yaw_joint": 0.5,
             #     "psm_pitch_end_joint": 0.2,
diff --git a/source/extensions/orbit.surgical.tasks/orbit/surgical/tasks/surgical/lift/lift_env_cfg.py b/source/extensions/orbit.surgical.tasks/orbit/surgical/tasks/surgical/lift/lift_env_cfg.py
index 7f9c475..93d4a69 100644
--- a/source/extensions/orbit.surgical.tasks/orbit/surgical/tasks/surgical/lift/lift_env_cfg.py
+++ b/source/extensions/orbit.surgical.tasks/orbit/surgical/tasks/surgical/lift/lift_env_cfg.py
@@ -199,7 +199,7 @@ class RewardsCfg:
     """Reward terms for the MDP."""
 
     # previously weight 0.4
-    reaching_object = RewTerm(func=mdp.object_ee_distance, params={"std": 0.1}, weight=1.0)
+    #reaching_object = RewTerm(func=mdp.object_ee_distance, params={"std": 0.1}, weight=1.0)
 
     # increased lifing reward
     # best result: no reach, lift weight 15, dt 0.01, 5.sec
@@ -234,11 +234,11 @@ class RewardsCfg:
 
     # object_drop = RewTerm(func=mdp.object_velocity, weight=-2.0)
 
-    # joint_deviation_hip = RewTerm(
-    #     func=mdp.joint_deviation_l1,
-    #     weight=-0.01,
-    #     params={"asset_cfg": SceneEntityCfg("robot", joint_names=["psm_tool_pitch_joint", "psm_tool_roll_joint"])},
-    # )
+    joint_deviation_hip = RewTerm(
+        func=mdp.joint_deviation_l1,
+        weight=-0.01,
+        params={"asset_cfg": SceneEntityCfg("robot", joint_names=["psm_tool_pitch_joint", "psm_tool_roll_joint"])},
+    )
 
     # grasp_needle = RewTerm(
     #     func=mdp.grasp_needle,
@@ -281,16 +281,16 @@ class CurriculumCfg:
         func=mdp.modify_reward_weight, params={"term_name": "joint_vel", "weight": -1e-1, "num_steps": 10000}
     )
 
-    # action_rate2 = CurrTerm(
-    #     func=mdp.modify_reward_weight, params={"term_name": "action_rate", "weight": -2, "num_steps": 20000}
-    # )
+    action_rate2 = CurrTerm(
+        func=mdp.modify_reward_weight, params={"term_name": "action_rate", "weight": -2, "num_steps": 20000}
+    )
     # grasp_needle = CurrTerm(
     #     func=mdp.modify_reward_weight, params={"term_name": "grasp_needle", "weight": 17, "num_steps": 25000}
     # )
 
-    # joint_vel2 = CurrTerm(
-    #     func=mdp.modify_reward_weight, params={"term_name": "joint_vel", "weight": -2, "num_steps": 20000}
-    # )
+    joint_vel2 = CurrTerm(
+        func=mdp.modify_reward_weight, params={"term_name": "joint_vel", "weight": -2, "num_steps": 20000}
+    )
 
     # object_moving = CurrTerm(
     #     func=mdp.modify_reward_weight, params={"term_name": "object_drop", "weight": -5, "num_steps": 30000}